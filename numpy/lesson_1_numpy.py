#!/usr/bin/env python
# coding: utf-8

# In[1]:


import numpy as np


# ### Задание 1

# Импортируйте библиотеку Numpy и дайте ей псевдоним np.
# Создайте массив Numpy под названием a размером 5x2, то есть состоящий из 5 строк и 2 столбцов. Первый столбец должен содержать числа 1, 2, 3, 3, 1, а второй - числа 6, 8, 11, 10, 7. Будем считать, что каждый столбец - это признак, а строка - наблюдение. Затем найдите среднее значение по каждому признаку, используя метод mean массива Numpy. Результат запишите в массив mean_a, в нем должно быть 2 элемента.
# 

# In[17]:


a = np.array([[1,6],
              [2,8],
              [3,11],
              [3,10],
              [1,7]])


# In[18]:


mean_a = np.mean(a, axis =0)


# In[19]:


mean_a


# ### Задание 2

# Вычислите массив a_centered, отняв от значений массива “а” средние значения соответствующих признаков, содержащиеся в массиве mean_a. Вычисление должно производиться в одно действие. Получившийся массив должен иметь размер 5x2.

# In[21]:


a_centered = a - mean_a
a_centered


# ### Задание 3

# Найдите скалярное произведение столбцов массива a_centered. В результате должна получиться величина a_centered_sp. Затем поделите a_centered_sp на N-1, где N - число наблюдений.

# In[28]:


a_centered_sp = np.dot(a_centered[:,0],a_centered[:,1])
a_centered_sp 


# In[36]:


N = len(a)
a_centered_sp/(N-1)


# ### Задание 4

# В этом задании проверьте получившееся число, вычислив ковариацию еще одним способом - с помощью функции np.cov. В качестве аргумента m функция np.cov должна принимать транспонированный массив “a”. В получившейся ковариационной матрице (массив Numpy размером 2x2) искомое значение ковариации будет равно элементу в строке с индексом 0 и столбце с индексом 1.
# 

# In[33]:


m = a.T
m


# In[35]:


answer = np.cov(m)
answer[0][1]


# In[ ]:




